// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Tiradentes.CobrancaAtiva.Infrastructure.Context;

namespace Tiradentes.CobrancaAtiva.Infrastructure.Migrations
{
    [DbContext(typeof(CobrancaAtivaDbContext))]
    [Migration("20220106142818_updateParcelasAcordo")]
    partial class updateParcelasAcordo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.AcordosCobrancasModel", b =>
                {
                    b.Property<decimal>("NumeroAcordo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_ACORDO");

                    b.Property<string>("CPF")
                        .HasColumnType("CHAR(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("CnpjEmpresaCobranca")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ_EMPRESA_COBRANCA");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA");

                    b.Property<DateTime>("DataBaixa")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_BAIXA");

                    b.Property<decimal>("Matricula")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MATRICLA");

                    b.Property<decimal>("Mora")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MORA");

                    b.Property<decimal>("Multa")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MULTA");

                    b.Property<decimal>("Saldo_Devedor")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("SALDO_DEVEDOR");

                    b.Property<string>("Sistema")
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SISTEMA");

                    b.Property<string>("TipoInadimplencia")
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TIPO_INADIMPLENCIA");

                    b.Property<decimal>("TotalParcelas")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("TOTAL_PARCELAS");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("VALOR_TOTAL");

                    b.HasKey("NumeroAcordo");

                    b.ToTable("ACORDOS_COBRANCAS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.BancoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_BANCO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CODIGO_BANCO");

                    b.Property<string>("Nome")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_BANCO");

                    b.HasKey("Id");

                    b.ToTable("BANCOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ContaBancariaEmpresaParceiraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESAS_CONTAS_BANCARIAS")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BancoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_BANCO");

                    b.Property<string>("CodigoAgencia")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CODIGO_AGENCIA");

                    b.Property<string>("ContaCorrente")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONTA_CORRENTE");

                    b.Property<string>("Convenio")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONVENIO");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("Pix")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PIX");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.ToTable("EMPRESAS_CONTAS_BANCARIAS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ContatoEmpresaParceiraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_CONTATO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONTATO");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("Telefone")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("EMPRESAS_CONTATOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.CursoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_CURSO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoMagister")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COD_MAGISTER");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO_CURSO");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_INSTITUICAO");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_MODALIDADE");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("CURSOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESA")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AditivoContrato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ADITIVO_CONTRATO");

                    b.Property<string>("CNPJ")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("IpEnvioArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasDefaultValue("")
                        .HasColumnName("IP_ENVIO_ARQUIVO");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME_FANTASIA");

                    b.Property<string>("NumeroContrato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMERO_CONTRATO");

                    b.Property<int?>("PortaEnvioArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValue(22)
                        .HasColumnName("PORTA_ENVIO_ARQUIVO");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("RAZAO_SOCIAL");

                    b.Property<string>("SenhaEnvioArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasDefaultValue("")
                        .HasColumnName("SENHA_ENVIO_ARQUIVO");

                    b.Property<string>("Sigla")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SIGLA");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUS_EMPRESA");

                    b.Property<string>("TipoEnvioArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasDefaultValue("")
                        .HasColumnName("TIPO_ENVIO_ARQUIVO");

                    b.Property<string>("URL")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("URL_EMPRESA");

                    b.Property<string>("UsuarioEnvioArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasDefaultValue("")
                        .HasColumnName("USUARIO_ENVIO_ARQUIVO");

                    b.HasKey("Id");

                    b.ToTable("EMPRESAS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.EnderecoEmpresaParceiraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_ENDERECO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("Estado")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Logradouro")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("Numero")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMERO");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.ToTable("EMPRESAS_ENDERECOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.HonorarioEmpresaParceiraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_HONORARIO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaParceiraId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<string>("Informacao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INFORMACOES");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_INSTITUICAO");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_MODALIDADE");

                    b.Property<float>("PercentualCobrancaIndevida")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("PERC_COBRANCA_INDEVIDA");

                    b.Property<float>("PercentualNegociacaoEmpresaParceira")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("PERC_EMPR_COBR");

                    b.Property<float>("PercentualNegociacaoInstituicaoEnsino")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("PERC_INSTITUICAO");

                    b.Property<float>("ValorCobrancaIndevida")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("VALOR_COBRANCA_INDEVIDA");

                    b.Property<float>("ValorNegociacaoEmpresaParceira")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("VALOR_EMPR_COBR");

                    b.Property<float>("ValorNegociacaoInstituicaoEnsino")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("VALOR_INSTITUICAO");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaParceiraId");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("HONORARIOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModalidadeModel", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_INSTITUICAO");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_MODALIDADE");

                    b.HasKey("InstituicaoId", "ModalidadeId");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("INSTITUICOES_MODALIDADES");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_INSTITUICAO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Instituicao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INSTITUICAO");

                    b.HasKey("Id");

                    b.ToTable("INSTITUICOES");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ItensBaixaTipo1Model", b =>
                {
                    b.Property<DateTime>("DataBaixa")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_BAIXA");

                    b.Property<decimal>("Sequencia")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("SEQ");

                    b.Property<decimal>("CodigoErro")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("COD_ERRO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_VENC");

                    b.Property<decimal>("Juros")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("JUROS");

                    b.Property<decimal>("Matricula")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MATRICULA");

                    b.Property<decimal>("Multa")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MULTA");

                    b.Property<decimal>("NumeroAcordo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_ACORDO");

                    b.Property<decimal>("NumeroLinha")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_LINHA");

                    b.Property<decimal>("Parcela")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("PARCELA");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("VALOR");

                    b.HasKey("DataBaixa", "Sequencia");

                    b.ToTable("ITENS_BAIXAS_TIPO1");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ItensBaixaTipo2Model", b =>
                {
                    b.Property<DateTime>("DataBaixa")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_BAIXA");

                    b.Property<decimal>("Sequencia")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("SEQ");

                    b.Property<decimal>("CodigoErro")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("COD_ERRO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_VENC");

                    b.Property<decimal>("Matricula")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MATRICULA");

                    b.Property<decimal>("NumeroAcordo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_ACORDO");

                    b.Property<decimal>("NumeroLinha")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_LINHA");

                    b.Property<decimal>("Parcela")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("PARCELA");

                    b.Property<decimal>("Periodo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("PERIODO");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("VALOR");

                    b.HasKey("DataBaixa", "Sequencia");

                    b.ToTable("ITENS_BAIXAS_TIPO2");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ItensBaixaTipo3Model", b =>
                {
                    b.Property<DateTime>("DataBaixa")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_BAIXA");

                    b.Property<decimal>("Sequencia")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("SEQ");

                    b.Property<decimal>("CodigoErro")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("COD_ERRO");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_PGTO");

                    b.Property<decimal>("Matricula")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MATRICULA");

                    b.Property<decimal>("NumeroAcordo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_ACORDO");

                    b.Property<decimal>("NumeroLinha")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_LINHA");

                    b.Property<decimal>("Parcela")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("PARCELA");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("VALOR_PAGO");

                    b.HasKey("DataBaixa", "Sequencia");

                    b.ToTable("ITENS_BAIXAS_TIPO3");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_MODALIDADE")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoMagister")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COD_MAGISTER");

                    b.Property<string>("Modalidade")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MODALIDADE");

                    b.HasKey("Id");

                    b.ToTable("MODALIDADES");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioCursoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO_CURSO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_CURSO");

                    b.Property<int>("ParametroEnvioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("ParametroEnvioId");

                    b.ToTable("PARAMETRO_ENVIO_CURSO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiaEnvio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DIA_ENVIO");

                    b.Property<int>("EmpresaParceiraId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_EMPRESA");

                    b.Property<DateTime>("InadimplenciaFinal")
                        .HasColumnType("DATE")
                        .HasColumnName("INADIMPLENCIA_FINAL");

                    b.Property<DateTime>("InadimplenciaInicial")
                        .HasColumnType("DATE")
                        .HasColumnName("INADIMPLENCIA_INICIAL");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_INSTITUICAO");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_MODALIDADE");

                    b.Property<string>("MotivoInativacao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MOTIVO_INATIVACAO");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("ValidadeFinal")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDADE_FINAL");

                    b.Property<DateTime>("ValidadeInicial")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDADE_INICIAL");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaParceiraId");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("PARAMETRO_ENVIO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioSituacaoAlunoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO_SIT_ALUNO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParametroEnvioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO");

                    b.Property<int>("SituacaoAlunoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_SITUACAO_ALUNO");

                    b.HasKey("Id");

                    b.HasIndex("ParametroEnvioId");

                    b.HasIndex("SituacaoAlunoId");

                    b.ToTable("PARAMETRO_ENVIO_SIT_ALUNO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioTipoTituloModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO_TIPO_TITULO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParametroEnvioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO");

                    b.Property<int>("TipoTituloId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TIPO_TITULO");

                    b.HasKey("Id");

                    b.HasIndex("ParametroEnvioId");

                    b.HasIndex("TipoTituloId");

                    b.ToTable("PARAMETRO_ENVIO_TIPO_TITULO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioTituloAvulsoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO_TITULO_AVULSO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParametroEnvioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_PARAMETRO_ENVIO");

                    b.Property<int>("TituloAvulsoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TITULO_AVULSO");

                    b.HasKey("Id");

                    b.HasIndex("ParametroEnvioId");

                    b.HasIndex("TituloAvulsoId");

                    b.ToTable("PARAMETRO_ENVIO_TITULO_AVULSO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParcelasAcordoModel", b =>
                {
                    b.Property<decimal>("NumeroAcordo")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("NUM_ACORDO");

                    b.Property<decimal>("Parcela")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("PARCELA");

                    b.Property<string>("CnpjEmpresaCobranca")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ_EMPRESA_COBRANCA");

                    b.Property<DateTime>("DataBaixa")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_BAIXA");

                    b.Property<DateTime>("DataBaixaPagamento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_BAIXA_PGTO");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_PGTO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_VENC");

                    b.Property<string>("Sistema")
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SISTEMA");

                    b.Property<string>("TipoInadimplencia")
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TIPO_INADIMPLENCIA");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("VALOR");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("VALOR_PAGO");

                    b.HasKey("NumeroAcordo", "Parcela");

                    b.ToTable("PARCELAS_ACORDO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParcelasTitulosModel", b =>
                {
                    b.Property<decimal>("NumeroAcordo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUM_ACORDO");

                    b.Property<int>("Matricula")
                        .HasColumnType("NUMBER(11)")
                        .HasColumnName("MATRICULA");

                    b.Property<decimal>("Periodo")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("PERIODO");

                    b.Property<decimal>("Parcela")
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("PARCELA");

                    b.Property<string>("CnpjEmpresaCobranca")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ_EMPRESA_COBRANCA");

                    b.Property<DateTime>("DataBaixa")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_BAIXA");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_ENVIO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DAT_VENC");

                    b.Property<decimal>("PeriodoChequeDevolvido")
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("PERIODO_CHEQUE_DEVOLVIDO");

                    b.Property<string>("Sistema")
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SISTEMA");

                    b.Property<string>("TipoInadimplencia")
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TIPO_INADIMPLENCIA");

                    b.Property<decimal>("Valor")
                        .HasColumnType("NUMBER(15,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("NumeroAcordo", "Matricula", "Periodo", "Parcela");

                    b.ToTable("PARCELAS_TITULOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoCursoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO_CURSO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_CURSO");

                    b.Property<int>("RegraNegociacaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("RegraNegociacaoId");

                    b.ToTable("REGRA_NEGOCIACAO_CURSO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InadimplenciaFinal")
                        .HasColumnType("DATE")
                        .HasColumnName("INADIMPLENCIA_FINAL");

                    b.Property<DateTime>("InadimplenciaInicial")
                        .HasColumnType("DATE")
                        .HasColumnName("INADIMPLENCIA_INICIAL");

                    b.Property<int?>("InstituicaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_INSTITUICAO");

                    b.Property<int?>("ModalidadeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_MODALIDADE");

                    b.Property<decimal>("PercentEntradaBoleto")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_ENTRADA_BOLETO");

                    b.Property<decimal>("PercentJurosMultaAVista")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_JUROS_MULTA_AVISTA");

                    b.Property<decimal>("PercentJurosMultaBoleto")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_JUROS_MULTA_BOLETO");

                    b.Property<decimal>("PercentJurosMultaCartao")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_JUROS_MULTA_CARTAO");

                    b.Property<decimal>("PercentValorAVista")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_VALOR_AVISTA");

                    b.Property<decimal>("PercentValorBoleto")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_VALOR_BOLETO");

                    b.Property<decimal>("PercentValorCartao")
                        .HasColumnType("NUMBER(3,5)")
                        .HasColumnName("PERCENT_VALOR_CARTAO");

                    b.Property<int>("QuantidadeParcelasBoleto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QUANT_PARCELA_BOLETO");

                    b.Property<int>("QuantidadeParcelasCartao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QUANT_PARCELA_CARTAO");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("ValidadeFinal")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDADE_FINAL");

                    b.Property<DateTime>("ValidadeInicial")
                        .HasColumnType("DATE")
                        .HasColumnName("VALIDADE_INICIAL");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("REGRA_NEGOCIACAO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoSituacaoAlunoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO_SIT_ALUNO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RegraNegociacaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO");

                    b.Property<int>("SituacaoAlunoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_SITUACAO_ALUNO");

                    b.HasKey("Id");

                    b.HasIndex("RegraNegociacaoId");

                    b.HasIndex("SituacaoAlunoId");

                    b.ToTable("REGRA_NEGOCIACAO_SIT_ALUNO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoTipoTituloModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO_TIPO_TITULO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RegraNegociacaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO");

                    b.Property<int>("TipoTituloId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TIPO_TITULO");

                    b.HasKey("Id");

                    b.HasIndex("RegraNegociacaoId");

                    b.HasIndex("TipoTituloId");

                    b.ToTable("REGRA_NEGOCIACAO_TIPO_TITULO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoTituloAvulsoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO_TITULO_AVULSO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RegraNegociacaoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_REGRA_NEGOCIACAO");

                    b.Property<int>("TituloAvulsoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TITULO_AVULSO");

                    b.HasKey("Id");

                    b.HasIndex("RegraNegociacaoId");

                    b.HasIndex("TituloAvulsoId");

                    b.ToTable("REGRA_NEGOCIACAO_TITULO_AVULSO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.SemestreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_SEMESTRE")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO_SEMESTRE");

                    b.Property<int>("Numeral")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMERAL_SEMESTRE");

                    b.HasKey("Id");

                    b.ToTable("SEMESTRES");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.SituacaoAlunoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_SITUACAO_ALUNO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoMagister")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COD_MAGISTER");

                    b.Property<string>("Situacao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO_SITUACAO");

                    b.HasKey("Id");

                    b.ToTable("SITUACOES_ALUNO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.TipoPagamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TIPO_PAGAMENTO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoPagamento")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO_TIPO_PAGAMENTO");

                    b.HasKey("Id");

                    b.ToTable("TIPO_PAGAMENTO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.TipoTituloModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TIPO_TITULO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoMagister")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COD_MAGISTER");

                    b.Property<string>("TipoTitulo")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO_TITULO");

                    b.HasKey("Id");

                    b.ToTable("TIPO_TITULOS");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.TituloAvulsoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_TIT_AVULSO")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoGT")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COD_GT");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("TITULO_AVULSO");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ContaBancariaEmpresaParceiraModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.BancoModel", "Banco")
                        .WithMany("ContaBancarias")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", "Empresa")
                        .WithOne("ContaBancaria")
                        .HasForeignKey("Tiradentes.CobrancaAtiva.Domain.Models.ContaBancariaEmpresaParceiraModel", "EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ContatoEmpresaParceiraModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", "Empresa")
                        .WithMany("Contatos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.CursoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", "Instituicao")
                        .WithMany("Cursos")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", "Modalidade")
                        .WithMany("Cursos")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.EnderecoEmpresaParceiraModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", "Empresa")
                        .WithOne("Endereco")
                        .HasForeignKey("Tiradentes.CobrancaAtiva.Domain.Models.EnderecoEmpresaParceiraModel", "EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.HonorarioEmpresaParceiraModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", "EmpresaParceira")
                        .WithMany("Honorarios")
                        .HasForeignKey("EmpresaParceiraId")
                        .HasConstraintName("FK_HONORARIO_COD_EMPRESA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", "Instituicao")
                        .WithMany("Honorarios")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", "Modalidade")
                        .WithMany("Honorarios")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaParceira");

                    b.Navigation("Instituicao");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModalidadeModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", "Instituicao")
                        .WithMany("InstituicoesModalidades")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", "Modalidade")
                        .WithMany("InstituicoesModalidades")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioCursoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.CursoModel", "Curso")
                        .WithMany("ParametroEnvioCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", "ParametroEnvio")
                        .WithMany("ParametroEnvioCurso")
                        .HasForeignKey("ParametroEnvioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("ParametroEnvio");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", "EmpresaParceira")
                        .WithMany("ParametroEnvios")
                        .HasForeignKey("EmpresaParceiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", "Instituicao")
                        .WithMany("ParametroEnvios")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", "Modalidade")
                        .WithMany("ParametroEnvios")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaParceira");

                    b.Navigation("Instituicao");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioSituacaoAlunoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", "ParametroEnvio")
                        .WithMany("ParametroEnvioSituacaoAluno")
                        .HasForeignKey("ParametroEnvioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.SituacaoAlunoModel", "SituacaoAluno")
                        .WithMany("ParametroEnvioSituacaoAluno")
                        .HasForeignKey("SituacaoAlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParametroEnvio");

                    b.Navigation("SituacaoAluno");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioTipoTituloModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", "ParametroEnvio")
                        .WithMany("ParametroEnvioTipoTitulo")
                        .HasForeignKey("ParametroEnvioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.TipoTituloModel", "TipoTitulo")
                        .WithMany("ParametroEnvioTipoTitulo")
                        .HasForeignKey("TipoTituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParametroEnvio");

                    b.Navigation("TipoTitulo");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioTituloAvulsoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", "ParametroEnvio")
                        .WithMany("ParametroEnvioTituloAvulso")
                        .HasForeignKey("ParametroEnvioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.TituloAvulsoModel", "TituloAvulso")
                        .WithMany("ParametroEnvioTituloAvulso")
                        .HasForeignKey("TituloAvulsoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParametroEnvio");

                    b.Navigation("TituloAvulso");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoCursoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.CursoModel", "Curso")
                        .WithMany("RegraNegociacaoCurso")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", "RegraNegociacao")
                        .WithMany("RegraNegociacaoCurso")
                        .HasForeignKey("RegraNegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("RegraNegociacao");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", "Instituicao")
                        .WithMany("RegraNegociacao")
                        .HasForeignKey("InstituicaoId");

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", "Modalidade")
                        .WithMany("RegraNegociacao")
                        .HasForeignKey("ModalidadeId");

                    b.Navigation("Instituicao");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoSituacaoAlunoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", "RegraNegociacao")
                        .WithMany("RegraNegociacaoSituacaoAluno")
                        .HasForeignKey("RegraNegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.SituacaoAlunoModel", "SituacaoAluno")
                        .WithMany("RegraNegociacaoSituacaoAluno")
                        .HasForeignKey("SituacaoAlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegraNegociacao");

                    b.Navigation("SituacaoAluno");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoTipoTituloModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", "RegraNegociacao")
                        .WithMany("RegraNegociacaoTipoTitulo")
                        .HasForeignKey("RegraNegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.TipoTituloModel", "TipoTitulo")
                        .WithMany("RegraNegociacaoTipoTitulo")
                        .HasForeignKey("TipoTituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegraNegociacao");

                    b.Navigation("TipoTitulo");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoTituloAvulsoModel", b =>
                {
                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", "RegraNegociacao")
                        .WithMany("RegraNegociacaoTituloAvulso")
                        .HasForeignKey("RegraNegociacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tiradentes.CobrancaAtiva.Domain.Models.TituloAvulsoModel", "TituloAvulso")
                        .WithMany("RegraNegociacaoTituloAvulso")
                        .HasForeignKey("TituloAvulsoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegraNegociacao");

                    b.Navigation("TituloAvulso");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.BancoModel", b =>
                {
                    b.Navigation("ContaBancarias");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.CursoModel", b =>
                {
                    b.Navigation("ParametroEnvioCurso");

                    b.Navigation("RegraNegociacaoCurso");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.EmpresaParceiraModel", b =>
                {
                    b.Navigation("ContaBancaria");

                    b.Navigation("Contatos");

                    b.Navigation("Endereco");

                    b.Navigation("Honorarios");

                    b.Navigation("ParametroEnvios");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.InstituicaoModel", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("Honorarios");

                    b.Navigation("InstituicoesModalidades");

                    b.Navigation("ParametroEnvios");

                    b.Navigation("RegraNegociacao");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ModalidadeModel", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("Honorarios");

                    b.Navigation("InstituicoesModalidades");

                    b.Navigation("ParametroEnvios");

                    b.Navigation("RegraNegociacao");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.ParametroEnvioModel", b =>
                {
                    b.Navigation("ParametroEnvioCurso");

                    b.Navigation("ParametroEnvioSituacaoAluno");

                    b.Navigation("ParametroEnvioTipoTitulo");

                    b.Navigation("ParametroEnvioTituloAvulso");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.RegraNegociacaoModel", b =>
                {
                    b.Navigation("RegraNegociacaoCurso");

                    b.Navigation("RegraNegociacaoSituacaoAluno");

                    b.Navigation("RegraNegociacaoTipoTitulo");

                    b.Navigation("RegraNegociacaoTituloAvulso");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.SituacaoAlunoModel", b =>
                {
                    b.Navigation("ParametroEnvioSituacaoAluno");

                    b.Navigation("RegraNegociacaoSituacaoAluno");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.TipoTituloModel", b =>
                {
                    b.Navigation("ParametroEnvioTipoTitulo");

                    b.Navigation("RegraNegociacaoTipoTitulo");
                });

            modelBuilder.Entity("Tiradentes.CobrancaAtiva.Domain.Models.TituloAvulsoModel", b =>
                {
                    b.Navigation("ParametroEnvioTituloAvulso");

                    b.Navigation("RegraNegociacaoTituloAvulso");
                });
#pragma warning restore 612, 618
        }
    }
}
